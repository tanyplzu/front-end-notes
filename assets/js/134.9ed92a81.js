(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{478:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),a("h2",{attrs:{id:"代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[t._v("#")]),t._v(" 代理")]),t._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server {\n  listen       80;\n  server_name  test.com;\n\n  location / {\n    proxy_pass http://127.0.0.1:8888;\n    proxy_set_header Host $host;\n}\n\nserver {\n  listen       80;\n  server_name  a.test.com;\n\n  location / {\n    proxy_pass http://127.0.0.1:8080;\n    proxy_set_header Host $host;\n}\n")])])]),a("ul",[a("li",[t._v("proxy_pass 转发的请求")]),t._v(" "),a("li",[a("code",[t._v("$host")]),t._v(" 每个请求带过来的 host 就是"),a("code",[t._v("$host")]),t._v("，也可以转发")]),t._v(" "),a("li",[t._v("用 host 区分我实际想访问哪个服务")])]),t._v(" "),a("h2",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("proxy_cache_path cache levels=1:2 keys_zone=my_cache:10m;\n")])])]),a("ul",[a("li",[t._v("proxy_cache_path 是缓存的存放地址,cache 是相对路径目录")]),t._v(" "),a("li",[t._v("缓存路径，是否要创建二级文件夹")]),t._v(" "),a("li",[t._v("my_cache 缓存的名字，可以设置大小")])]),t._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("proxy_cache_path cache levels=1:2 keys_zone=my_cache:10m;\nserver {\n  listen       80;\n  server_name  test.com;\n  location / {\n    proxy_cache my_cache;\n    proxy_pass http://127.0.0.1:8888;\n    proxy_set_header Host $host;\n  }\n}\n")])])]),a("h3",{attrs:{id:"跟代理缓存有关的-http-头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跟代理缓存有关的-http-头"}},[t._v("#")]),t._v(" 跟代理缓存有关的 http 头")]),t._v(" "),a("ul",[a("li",[t._v("s-maxage 专门给代理缓存用的，如果同时设置了 max-age 和 s-maxage，会优先使用 s-maxage")]),t._v(" "),a("li",[t._v("max-age 浏览器缓存")]),t._v(" "),a("li",[t._v("加 private 时 s-maxage 不会生效")]),t._v(" "),a("li",[t._v("no-store 所有地方都不缓存")]),t._v(" "),a("li",[t._v("Vary 头信息一致时缓存，比如中文、英文的场景")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务端")]),t._v("\nresponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Cache-Control'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'max-age=2, s-maxage=20, private'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Vary")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X-Test-Cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 客户端")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("headers")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'X-Test-Cache'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);