(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{522:function(t,a,s){"use strict";s.r(a);var n=s(15),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-boot-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-基础"}},[t._v("#")]),t._v(" Spring Boot 基础")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#ioc"}},[t._v("IOC")]),s("ul",[s("li",[s("a",{attrs:{href:"#加入容器"}},[t._v("加入容器")])])])]),s("li",[s("a",{attrs:{href:"#自动配置有什么用"}},[t._v("自动配置有什么用？")])]),s("li",[s("a",{attrs:{href:"#spring-的实例化和依赖注入"}},[t._v("Spring 的实例化和依赖注入")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"ioc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioc"}},[t._v("#")]),t._v(" IOC")]),t._v(" "),s("ul",[s("li",[t._v("实现过程：容器，"),s("strong",[t._v("加入容器")]),t._v("，注入")]),t._v(" "),s("li",[t._v("目的：控制权交给用户")])]),t._v(" "),s("h3",{attrs:{id:"加入容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加入容器"}},[t._v("#")]),t._v(" 加入容器")]),t._v(" "),s("ul",[s("li",[t._v("xml")]),t._v(" "),s("li",[t._v("注解")])]),t._v(" "),s("p",[t._v("使用@Component 加入容器，容器已经将类实例化，在别的类中可以直接使用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BookService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用 @Autowired 注入")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" literature "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),t._v(" book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("除了属性的注入，还可以使用构造函数的方式注入。推荐使用构造函数注入。")]),t._v(" "),s("h2",{attrs:{id:"自动配置有什么用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动配置有什么用"}},[t._v("#")]),t._v(" 自动配置有什么用？")]),t._v(" "),s("p",[t._v("与其它的后端框架不同，Spring Boot 并没有在程序的入口处引入各层的模块，各层代码看色并不相关。但其实他们之间有个桥接点，就是 IOC。")]),t._v(" "),s("h2",{attrs:{id:"spring-的实例化和依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-的实例化和依赖注入"}},[t._v("#")]),t._v(" Spring 的实例化和依赖注入")]),t._v(" "),s("p",[t._v("Spring Boot 可以更改对象实例化和实例化的时机的。可以使用 @Lazy 注解。")])])}),[],!1,null,null,null);a.default=r.exports}}]);