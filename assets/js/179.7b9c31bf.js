(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{518:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#基本字符串和字符串对象"}},[t._v("基本字符串和字符串对象")])]),s("li",[s("a",{attrs:{href:"#api"}},[t._v("API")])])])]),s("p"),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer"}},[t._v("String"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"基本字符串和字符串对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本字符串和字符串对象"}},[t._v("#")]),t._v(" 基本字符串和字符串对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s_prim "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s_obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s_prim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" s_prim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Logs "string"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" s_obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Logs "object"')]),t._v("\n")])])]),s("h2",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("p",[t._v("charAt：返回特定位置的字符。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// returns "a"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// returns "a"')]),t._v("\n")])])]),s("p",[t._v("charCodeAt：返回表示给定索引的字符的 Unicode 的值。")]),t._v(" "),s("p",[t._v("codePointAt：返回使用 UTF-16 编码的给定位置的值的非负整数。")]),t._v(" "),s("p",[t._v("concat：连接两个字符串文本，并返回一个新的字符串。")]),t._v(" "),s("p",[t._v("includes：判断一个字符串里是否包含其他字符串。")]),t._v(" "),s("p",[t._v("endsWith：判断一个字符串的是否以给定字符串结尾，结果返回布尔值。")]),t._v(" "),s("p",[t._v("indexOf：从字符串对象中返回首个被发现的给定值的索引值，如果没有找到则返回-1。")]),t._v(" "),s("p",[t._v("lastIndexOf：从字符串对象中返回最后一个被发现的给定值的索引值，如果没有找到则返回-1。")]),t._v(" "),s("p",[t._v("localeCompare：返回一个数字表示是否引用字符串在排序中位于比较字符串的前面，后面，或者二者相同。")]),t._v(" "),s("p",[t._v("match：使用正则表达式与字符串相比较。")]),t._v(" "),s("p",[t._v("normalize：返回调用字符串值的 Unicode 标准化形式。")]),t._v(" "),s("p",[t._v("padEnd：在当前字符串尾部填充指定的字符串， 直到达到指定的长度。 返回一个新的字符串。")]),t._v(" "),s("p",[t._v("padStart：在当前字符串头部填充指定的字符串， 直到达到指定的长度。 返回一个新的字符串。")]),t._v(" "),s("p",[t._v("repeat：返回指定重复次数的由元素组成的字符串对象。")]),t._v(" "),s("p",[t._v("replace：被用来在正则表达式和字符串直接比较，然后用新的子串来替换被匹配的子串。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abcabc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abcabcabc" 参数count将会被自动转换成整数.')]),t._v("\n")])])]),s("p",[t._v("search：对正则表达式和指定字符串进行匹配搜索，返回第一个出现的匹配项的下标。")]),t._v(" "),s("p",[t._v("slice：摘取一个字符串区域，返回一个新的字符串。")]),t._v(" "),s("p",[t._v("split：通过分离字符串成字串，将字符串对象分割成字符串数组。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 限制返回值中分割元素数量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World. How are you doing?'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" splits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["Hello", "World.", "How"]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 靠正则来分割使结果中包含分隔块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello 1 word. Sentence number 2.'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" splits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\d)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [ "Hello ", "1", " word. Sentence number ", "2", "." ]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ca,bc,a,bca,bca,bc'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" splits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["c", "c,", "c", "c", "c"]')]),t._v("\n")])])]),s("p",[t._v("startsWith：判断字符串的起始位置是否匹配其他字符串中的字符。")]),t._v(" "),s("p",[t._v("substr：通过指定字符数返回在指定位置开始的字符串中的字符。")]),t._v(" "),s("p",[t._v("substring：返回在字符串中指定两个下标之间的字符。")]),t._v(" "),s("p",[t._v("toLocaleLowerCase：根据当前区域设置，将符串中的字符转换成小写。对于大多数语言来说，toLowerCase 的返回值是一致的。")]),t._v(" "),s("p",[t._v("toLocaleUpperCase：根据当前区域设置，将字符串中的字符转换成大写，对于大多数语言来说，toUpperCase 的返回值是一致的。")]),t._v(" "),s("p",[t._v("toLowerCase：将字符串转换成小写并返回。")]),t._v(" "),s("p",[t._v("toSource：返回一个对象文字代表着特定的对象。你可以使用这个返回值来创建新的对象。重写 Object.prototype.toSource 方法。")]),t._v(" "),s("p",[t._v("toString：返回用字符串表示的特定对象。重写 Object.prototype.toString 方法。")]),t._v(" "),s("p",[t._v("toUpperCase：将字符串转换成大写并返回。")]),t._v(" "),s("p",[t._v("trim：从字符串的开始和结尾去除空格。参照部分 ECMAScript 5 标准。")]),t._v(" "),s("p",[t._v("trimStart：从字符串的左侧去除空格。")]),t._v(" "),s("blockquote",[s("p",[t._v("String.prototype.trimLeft() 有兼容性问题")])]),t._v(" "),s("p",[t._v("trimEnd：从字符串的右侧去除空格。")]),t._v(" "),s("blockquote",[s("p",[t._v("String.prototype.trimRight() 有兼容性问题")])]),t._v(" "),s("p",[t._v("valueOf：String 对象的 valueOf 方法返回一个 String 对象的原始值。")]),t._v(" "),s("p",[t._v("该值等同于 String.prototype.toString()")]),t._v(" "),s("p",[t._v("[@@iterator]：返回一个新的迭代器对象，该对象遍历字符串值的索引位置，将每个索引值作为字符串值返回。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);