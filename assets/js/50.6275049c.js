(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{460:function(t,a,s){"use strict";s.r(a);var r=s(15),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"常用的算法方法-一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的算法方法-一"}},[t._v("#")]),t._v(" 常用的算法方法（一）")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#指针法"}},[t._v("指针法")]),s("ul",[s("li",[s("a",{attrs:{href:"#对撞指针"}},[t._v("对撞指针")])]),s("li",[s("a",{attrs:{href:"#快慢指针"}},[t._v("快慢指针")])])])]),s("li",[s("a",{attrs:{href:"#递归与回溯"}},[t._v("递归与回溯")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"指针法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指针法"}},[t._v("#")]),t._v(" 指针法")]),t._v(" "),s("h3",{attrs:{id:"对撞指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对撞指针"}},[t._v("#")]),t._v(" 对撞指针")]),t._v(" "),s("p",[t._v("左右指针一起从两边往中间位置相互迫近，这样的特殊双指针形态，被称为“对撞指针”。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("三数求和问题")]),t._v(" "),s("p",[t._v("真题描述：给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("p",[t._v("给定数组 nums = [-1, 0, 1, 2, -1, -4]， 满足要求的三元组集合为： [ [-1, 0, 1], [-1, -1, 2] ]")])]),t._v(" "),s("h3",{attrs:{id:"快慢指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快慢指针"}},[t._v("#")]),t._v(" 快慢指针")]),t._v(" "),s("h2",{attrs:{id:"递归与回溯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递归与回溯"}},[t._v("#")]),t._v(" 递归与回溯")])])}),[],!1,null,null,null);a.default=e.exports}}]);