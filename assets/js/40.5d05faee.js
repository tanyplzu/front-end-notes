(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{330:function(a,t,e){a.exports=e.p+"assets/img/explorer_cache.b0d2613b.png"},418:function(a,t,e){"use strict";e.r(t);var r=e(6),i=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"浏览器缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[a._v("#")]),a._v(" 浏览器缓存")]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#强缓存"}},[a._v("强缓存")]),t("ul",[t("li",[t("a",{attrs:{href:"#expires"}},[a._v("Expires")])]),t("li",[t("a",{attrs:{href:"#cache-control"}},[a._v("Cache-Control")])])])]),t("li",[t("a",{attrs:{href:"#协商缓存"}},[a._v("协商缓存")]),t("ul",[t("li",[t("a",{attrs:{href:"#last-modified-if-modified-since"}},[a._v("Last-modified/If-Modified-Since")])]),t("li",[t("a",{attrs:{href:"#etag-if-none-match"}},[a._v("Etag/If-None-Match")])])])]),t("li",[t("a",{attrs:{href:"#最佳实践"}},[a._v("最佳实践")])]),t("li",[t("a",{attrs:{href:"#from-disk-cache-和-form-memory-cache"}},[a._v("from disk cache 和 form memory cache")])])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"强缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[a._v("#")]),a._v(" 强缓存")]),a._v(" "),t("h3",{attrs:{id:"expires"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[a._v("#")]),a._v(" Expires")]),a._v(" "),t("p",[a._v("Expires 是 HTTP/1.0 的标准，现在更倾向于用 HTTP/1.1 中定义的 Cache-Control。两个同时存在时也是 Cache-Control 的优先级更高。时区不同也可能造成缓存生命周期出错。")]),a._v(" "),t("h3",{attrs:{id:"cache-control"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[a._v("#")]),a._v(" Cache-Control")]),a._v(" "),t("ol",[t("li",[a._v("max-age 单位是 s，标准中规定 max-age 值最大不能超过一年 31536000")]),a._v(" "),t("li",[a._v("s-maxage 同 max-age，覆盖 max-age、Expires，但仅适用于共享缓存，只对 public(如 cdn) 起作用，在私有缓存中被忽略。优先级高于 max-age。")]),a._v(" "),t("li",[a._v("public 表明响应可以被任何对象（发送请求的客户端、代理服务器等等）缓存。")]),a._v(" "),t("li",[a._v("private 表明响应只能被单个用户（可能是操作系统用户、浏览器用户）缓存，是非共享的，不能被代理服务器缓存。")]),a._v(" "),t("li",[a._v("no-cache 强制所有缓存了该响应的用户，在使用已缓存的数据前，发送请求到服务器验证。不是字面意思上的不缓存。")]),a._v(" "),t("li",[a._v("no-store 禁止缓存，每次请求都要向服务器重新获取数据。")])]),a._v(" "),t("h2",{attrs:{id:"协商缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[a._v("#")]),a._v(" 协商缓存")]),a._v(" "),t("h3",{attrs:{id:"last-modified-if-modified-since"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since"}},[a._v("#")]),a._v(" Last-modified/If-Modified-Since")]),a._v(" "),t("p",[a._v("Last-modified: 服务器端资源的最后修改时间，响应头部会带上这个标识。第一次请求之后，浏览器记录这个时间，再次请求时，请求头部带上 If-Modified-Since 即为之前记录下的时间。若修改过就返回最新资源，状态码 200，若没有修改过则返回 304。")]),a._v(" "),t("p",[a._v("采用 Last-modified 时，会先判断 Cache-Control 是否命中，然后才去判断协商缓存。")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("注意：")]),a._v(" "),t("p",[a._v("如果响应头中有 Last-modified 而没有 Expire 或 Cache-Control 时，浏览器会有自己的算法来推算出一个时间缓存该文件多久，不同浏览器得出的时间不一样，所以 Last-modified 要记得配合 Expires/Cache-Control 使用。")])]),a._v(" "),t("h3",{attrs:{id:"etag-if-none-match"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-none-match"}},[a._v("#")]),a._v(" Etag/If-None-Match")]),a._v(" "),t("p",[a._v("由服务器端上生成的一段 hash 字符串，第一次请求时响应头带上 ETag: abcd，之后的请求中带上 If-None-Match: abcd，服务器检查 ETag，返回 304 或 200。")]),a._v(" "),t("p",[t("strong",[a._v("关于 last-modified 和 Etag 区别，已经有很多人总结过了：")])]),a._v(" "),t("ul",[t("li",[a._v("某些服务器不能精确得到资源的最后修改时间，这样就无法通过最后修改时间判断资源是否更新。")]),a._v(" "),t("li",[a._v("Last-modified 只能精确到秒，在秒以内的修改无法匹配。")]),a._v(" "),t("li",[a._v("一些资源的最后修改时间改变了，但是内容没改变，使用 Last-modified 看不出内容没有改变。")]),a._v(" "),t("li",[a._v("Etag 的精度比 Last-modified 高，属于强验证，要求资源字节级别的一致，"),t("strong",[a._v("优先级高")]),a._v("。如果服务器端有提供 ETag 的话，必须先对 ETag 进行 Conditional Request。")])]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("注意")]),a._v(" "),t("p",[a._v("实际使用 ETag/Last-modified 要注意保持一致性，做负载均衡和反向代理的话可能会出现不一致的情况。计算 ETag 也是需要占用资源的，如果修改不是过于频繁，看自己的需求用 Cache-Control 是否可以满足。")])]),a._v(" "),t("h2",{attrs:{id:"最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[a._v("#")]),a._v(" 最佳实践")]),a._v(" "),t("ol",[t("li",[a._v("HTML：使用协商缓存")]),a._v(" "),t("li",[a._v("CSS&JS&图片：使用强缓存，文件命名带上 hash 值")]),a._v(" "),t("li",[a._v("可能经常需要变动的文件：Cache-Control: no-cache / max-age=0")]),a._v(" "),t("li",[a._v("不要对变化的资源添加较短的 max-age。如果页面有嵌套层次，会造成混乱。")])]),a._v(" "),t("p",[t("img",{attrs:{src:e(330),alt:"explorer_cache"}})]),a._v(" "),t("ul",[t("li",[a._v("max-age 时会显示 200 (form memory cache) 从浏览器缓存读取，耗时 0")]),a._v(" "),t("li",[a._v("s-maxage 返回 304")])]),a._v(" "),t("h2",{attrs:{id:"from-disk-cache-和-form-memory-cache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-disk-cache-和-form-memory-cache"}},[a._v("#")]),a._v(" from disk cache 和 form memory cache")]),a._v(" "),t("ul",[t("li",[a._v("from memory cache：chrome cache 中查找")]),a._v(" "),t("li",[a._v("from disk cache 不访问服务器，直接读缓存，从磁盘中读取缓存，当 kill 进程时，数据还是存在。")])]),a._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29750583",target:"_blank",rel:"noopener noreferrer"}},[a._v("HTTP 缓存机制一二三"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/28113197",target:"_blank",rel:"noopener noreferrer"}},[a._v("设计一个无懈可击的浏览器缓存方案"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://coding.imooc.com/learn/list/130.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("让你页面速度飞起来 Web 前端性能优化"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=i.exports}}]);